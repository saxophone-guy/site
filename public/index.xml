<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on jazz</title>
    <link>http://localhost:1313/</link>
    <description>Recent content in Home on jazz</description>
    <generator>Hugo</generator>
    <language>en-gb</language>
    <lastBuildDate>Wed, 06 Nov 2024 21:55:08 +0530</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Optimizing a square sum sequence</title>
      <link>http://localhost:1313/posts/first-post/</link>
      <pubDate>Wed, 06 Nov 2024 21:55:08 +0530</pubDate>
      <guid>http://localhost:1313/posts/first-post/</guid>
      <description>&lt;h3 id=&#34;mathematical-background&#34;&gt;Mathematical background&lt;/h3&gt;&#xA;&lt;p&gt;Before I start talking about this, let&amp;rsquo;s understand what we&amp;rsquo;re actually computing.&lt;/p&gt;&#xA;&lt;p&gt;$\sum_{i=0}^{n-1} i^2 \pmod{1000000007}$&lt;/p&gt;&#xA;&lt;p&gt;There are several mathematical properties we can exploit here:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The sum of squares has a closed form:&#xA;$\sum_{i=0}^{n-1} i^2 = \frac{(n-1)(n)(2n-1)}{6}$&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;However, this isn&amp;rsquo;t immediately useful to us because the result would overflow for a large $n$, and we need the modulo at each step.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The properties of modular arithmetic:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;$(a + b) \bmod m = ((a \bmod m) + (b \bmod m)) \bmod m$&lt;/li&gt;&#xA;&lt;li&gt;$(a * b) \bmod m = ((a \bmod m) * (b \bmod m)) \bmod m$&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;This means we can:&lt;/p&gt;</description>
    </item>
    <item>
      <title>About</title>
      <link>http://localhost:1313/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/about/</guid>
      <description>&lt;h3 id=&#34;who-am-i&#34;&gt;Who am I?&lt;/h3&gt;&#xA;&lt;p&gt;Hey! I&amp;rsquo;m Archit, also known as &lt;code&gt;saxophone&lt;/code&gt; on the internet. I&amp;rsquo;m a developer who codes for fun and digs deep into computers. Most of my time is spent working with C and C++, although sometimes I use assembly (both x86 and ARM)&lt;/p&gt;&#xA;&lt;h3 id=&#34;what-i-do&#34;&gt;What I do&lt;/h3&gt;&#xA;&lt;p&gt;I enjoy optimizing code and making it memory-safe, although I do tinker with a bit of everything. My projects revolve around low-level programming, where I focus on squeezing out performance while keeping things stable and secure. I&amp;rsquo;m fascinated by the internals of operating systems, networking, and compilers, which is why you&amp;rsquo;ll often find me experimenting with assembly and system-level code. Also, I love math.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
